When would you want to use a remote repository rather than keeping all your work local?

   Most of the time. That way, I can conveniently access my code from anywhere anytime with an internet connection.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

   I could be working on a feature that might not need updates from the remote or could even break my new functionality.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

   Fork is creating a clone, but staying within the realm of GitHub.
   Clone is creating a snapshot of the repository
   Branch is creating a label from a clone

What is the benefit of having a copy of the last known state of the remote stored locally?

   1. Enables you to work on the latest code
   2. Prevents merge conflicts
   
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

  Very difficult. Would have to set a time every few intervals and let the other members of the team know about the changes performed.   
  Would need to use tools like winmerge to see what has been changed etc and always end up doing manual merges!
  
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

 1. A new functionality
 2. Need to make changes froma particular point in master which is not the latest
 
 Benefits:
 1. Does not affect the production build.
 2. Easy to track the changes if there are any issyes caused by the new functionality after merging into master. That way, these changes   
    can be reverted back very easily from the master!
